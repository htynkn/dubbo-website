<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache Dubbo – Core Features</title><link>https://cn.dubbo.apache.org/en/overview/core-features/</link><description>Recent content in Core Features on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/overview/core-features/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview: Dubbo 微服务开发</title><link>https://cn.dubbo.apache.org/en/overview/core-features/service-definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/service-definition/</guid><description/></item><item><title>Overview: Service Discovery</title><link>https://cn.dubbo.apache.org/en/overview/core-features/service-discovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/service-discovery/</guid><description/></item><item><title>Overview: Load Balancing</title><link>https://cn.dubbo.apache.org/en/overview/core-features/load-balance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/load-balance/</guid><description>
&lt;p>During cluster load balancing, Dubbo provides multiple balancing strategies, with the default being the &lt;code>weighted random&lt;/code> strategy, which is a weight-based random load balancing strategy.&lt;/p>
&lt;p>In terms of implementation, Dubbo provides client-side load balancing, meaning the Consumer determines which Provider instance to send the request to using a load balancing algorithm.&lt;/p>
&lt;h2 id="load-balancing-strategies">Load Balancing Strategies&lt;/h2>
&lt;p>Currently, Dubbo has built-in the following load balancing algorithms, which can be enabled through configuration adjustments.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Algorithm&lt;/th>
&lt;th style="text-align:left">Characteristics&lt;/th>
&lt;th style="text-align:left">Remarks&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">Weighted Random LoadBalance&lt;/td>
&lt;td style="text-align:left">Weighted Random&lt;/td>
&lt;td style="text-align:left">Default algorithm, default weights are the same.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">RoundRobin LoadBalance&lt;/td>
&lt;td style="text-align:left">Weighted Round Robin&lt;/td>
&lt;td style="text-align:left">Inspired by Nginx&amp;rsquo;s smooth weighted round-robin algorithm.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">LeastActive LoadBalance&lt;/td>
&lt;td style="text-align:left">Least Active + Weighted Random&lt;/td>
&lt;td style="text-align:left">The principle of &amp;ldquo;the more capable, the more work&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Shortest-Response LoadBalance&lt;/td>
&lt;td style="text-align:left">Shortest Response + Weighted Random&lt;/td>
&lt;td style="text-align:left">Focuses more on response speed.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">ConsistentHash LoadBalance&lt;/td>
&lt;td style="text-align:left">Consistent Hashing&lt;/td>
&lt;td style="text-align:left">Deterministic parameters lead to a deterministic provider, suitable for stateful requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">P2C LoadBalance&lt;/td>
&lt;td style="text-align:left">Power of Two Choice&lt;/td>
&lt;td style="text-align:left">After randomly selecting two nodes, choose the one with fewer &amp;ldquo;connections&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Adaptive LoadBalance&lt;/td>
&lt;td style="text-align:left">Adaptive Load Balancing&lt;/td>
&lt;td style="text-align:left">Based on P2C algorithm, chooses the node with the least load.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="weighted-random">Weighted Random&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Weighted Random&lt;/strong>: The probability of random selection is set according to the weight.&lt;/li>
&lt;li>There&amp;rsquo;s a high collision probability on a cross-section, but as the call volume grows, the distribution becomes more even. After probability-based weighting, it&amp;rsquo;s also fairly even, which facilitates dynamic adjustment of provider weights.&lt;/li>
&lt;li>Downside: There&amp;rsquo;s the problem of slow providers accumulating requests.&lt;/li>
&lt;/ul>
&lt;h3 id="roundrobin">RoundRobin&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Weighted Round Robin&lt;/strong>: Calls nodes in a circular manner based on proportionate weights.&lt;/li>
&lt;li>Downside: There&amp;rsquo;s the problem of slow providers accumulating requests.&lt;/li>
&lt;/ul>
&lt;p>For the weighted round robin, if a node&amp;rsquo;s weight is too large, there&amp;rsquo;s the problem of concentrated calls in a short time span.&lt;/p>
&lt;h3 id="leastactive">LeastActive&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Weighted Least Active&lt;/strong>: The provider with the fewest active calls is preferred. The fewer the active calls, the stronger the provider&amp;rsquo;s processing ability.&lt;/li>
&lt;li>This ensures slower providers receive fewer requests, as slower providers will have a larger difference between requests sent and responses received.&lt;/li>
&lt;/ul>
&lt;h3 id="shortestresponse">ShortestResponse&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Weighted Shortest Response&lt;/strong>: Providers with faster response times handle more requests.&lt;/li>
&lt;li>Downside: This might lead to traffic concentrating too much on high-performance nodes.&lt;/li>
&lt;/ul>
&lt;h3 id="consistenthash">ConsistentHash&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Consistent Hashing&lt;/strong>: Requests with the same parameters are always sent to the same provider.&lt;/li>
&lt;li>When a provider fails, the requests originally directed to that provider are spread across other providers based on virtual nodes, without causing major disruption.&lt;/li>
&lt;li>For details, refer to: &lt;a href="http://en.wikipedia.org/wiki/Consistent_hashing">Consistent Hashing | WIKIPEDIA&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="p2c-load-balance">P2C Load Balance&lt;/h3>
&lt;p>The Power of Two Choice algorithm is simple but classic.&lt;/p>
&lt;h3 id="adaptive-load-balance">Adaptive Load Balance&lt;/h3>
&lt;p>Adaptive, as the name suggests, is a self-adapting load balancing mechanism that always tries to forward requests to the least loaded node.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Dubbo allows providers to configure a default load balancing strategy so that all consumers will use the strategy specified by the provider by default. Consumers can also specify their own load balancing strategies. If neither side has any configuration, the random load balancing strategy is used by default.&lt;/p>
&lt;p>Each application can configure different services to use different load balancing strategies and can even specify different strategies for different methods of the same service.&lt;/p>
&lt;p>For configuration details, refer to the implementations in different languages:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/advanced-features-and-usage/performance/loadbalance/">Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/">Golang&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="custom-extensions">Custom Extensions&lt;/h2>
&lt;p>Load balancing strategies support custom extension implementations. For details, please see &lt;a href="https://cn.dubbo.apache.org/en/overview/core-features/extensibility/">Dubbo&amp;rsquo;s Extensibility&lt;/a>.&lt;/p></description></item><item><title>Overview: 流量管控</title><link>https://cn.dubbo.apache.org/en/overview/core-features/traffic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/traffic/</guid><description/></item><item><title>Overview: 通信协议</title><link>https://cn.dubbo.apache.org/en/overview/core-features/protocols/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/protocols/</guid><description/></item><item><title>Overview: Extensibility Adaptation</title><link>https://cn.dubbo.apache.org/en/overview/core-features/extensibility/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/extensibility/</guid><description>
&lt;p>From its design, Dubbo is highly extendable. Through these extension points, you can:&lt;/p>
&lt;ul>
&lt;li>Intercept traffic and control its behavior.&lt;/li>
&lt;li>Fine-tune some of Dubbo&amp;rsquo;s default strategies and implementations.&lt;/li>
&lt;li>Adapt Dubbo services to internal microservices clusters or other mainstream open-source components.&lt;/li>
&lt;/ul>
&lt;h2 id="everything-is-extendable">Everything is Extendable&lt;/h2>
&lt;p>Dubbo&amp;rsquo;s extensibility allows the project to be conveniently divided into various sub-modules, enabling hot plugging. Users can replace Dubbo&amp;rsquo;s native implementation based on their needs to meet specific business requirements.&lt;/p>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/advantages/extensibility.png" alt="Admin Screenshot">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Protocol and Coding Extension&lt;/strong>: Communication protocols, serialization protocols, etc.&lt;/li>
&lt;li>&lt;strong>Traffic Control Extension&lt;/strong>: Cluster fault tolerance strategies, routing rules, load balancing, rate limiting, fallback, circuit breaking, etc.&lt;/li>
&lt;li>&lt;strong>Service Governance Extension&lt;/strong>: Service registry, configuration center, metadata center, distributed transactions, full-link tracing, monitoring systems, etc.&lt;/li>
&lt;li>&lt;strong>Diagnostic and Tuning Extension&lt;/strong>: Traffic statistics, thread pool strategies, logging, QoS maintenance commands, health checks, configuration loading, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="microservices-ecosystem-based-on-extension-points">Microservices Ecosystem Based on Extension Points&lt;/h2>
&lt;p>Numerous extension points and abstractions form the foundation for Dubbo&amp;rsquo;s integration with various microservices ecosystem components and the realization of microservices governance capabilities.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/observability/tracing/">Full-link Tracing&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/ecosystem/transaction/">Data Consistency&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/core-features/traffic/circuit-breaking/">Rate Limiting &amp;amp; Fallback&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Dubbo&amp;rsquo;s SDKs for various languages adopt the &amp;ldquo;microkernel + plugin&amp;rdquo; design pattern. Almost all core nodes in every process are defined as extension points. Officially released components are also released in the form of extension point implementations, so Dubbo can treat all official and third-party component extensions equally.&lt;/p>
&lt;ul>
&lt;li>Extensibility adaptation is key to realizing Dubbo&amp;rsquo;s microservices ecosystem. Ecosystem components, such as full-link tracing and service registry implementations, are adapted based on extension points like Filter, Registry, and DynamicConfiguration.&lt;/li>
&lt;li>Extensibility adaptation offers users the highest flexibility, allowing developers to integrate with internal components and customize core capabilities as needed.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/feature/extensibility/arc.png" alt="extensibility-echosystem.png">&lt;/p>
&lt;p>The above are some core extension points within Dubbo, categorized by architectural levels:&lt;/p>
&lt;ul>
&lt;li>Protocol Communication Layer&lt;/li>
&lt;li>Traffic Control Layer&lt;/li>
&lt;li>Service Governance Layer&lt;/li>
&lt;/ul>
&lt;h2 id="protocol-communication-layer">Protocol Communication Layer&lt;/h2>
&lt;p>As emphasized in the communication protocol section, Dubbo is not bound to any specific protocol. Users can select any combination of RPC and serialization protocols, such as Triple, gRPC, Dubbo2, REST, custom protocols, etc.&lt;/p>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/feature/extensibility/protocol.png" alt="Protocol and Coding Principles">&lt;/p>
&lt;h3 id="protocol">Protocol&lt;/h3>
&lt;p>The Protocol extension point defines the corresponding RPC protocol. By utilizing this extension point, Dubbo can act as a unified microservices development and governance framework, allowing for flexibility in the underlying communication protocol. Officially supported are the most popular RPC communication protocols, and if you wish to use a company-specific RPC communication protocol, provide a custom extension implementation via Protocol.&lt;/p>
&lt;h3 id="serialization">Serialization&lt;/h3>
&lt;p>The Serialization extension point defines serialization protocol extensions. Officially, Dubbo offers serialization protocols like Fastjson, Protobuf, Hessian2, Kryo, and FST.&lt;/p>
&lt;h2 id="traffic-control-layer">Traffic Control Layer&lt;/h2>
&lt;p>Dubbo pre-embeds a significant number of extension points in the service call link, allowing users to control the flow of runtime traffic and change the behavior of runtime calls.&lt;/p>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/feature/extensibility/traffic.png" alt="Protocol and Coding Principles">&lt;/p>
&lt;h3 id="filter">Filter&lt;/h3>
&lt;p>Filters, traffic interceptors in Dubbo, are based on the AOP design pattern. They preprocess and postprocess each service call, handling tasks like access logs, encryption/decryption, traffic statistics, parameter verification, etc.&lt;/p>
&lt;h3 id="router">Router&lt;/h3>
&lt;p>The Router is a key component for traffic control in Dubbo. It directs traffic that meets certain conditions to a specific group of address subsets, enabling various traffic control modes.&lt;/p>
&lt;h3 id="load-balance">Load Balance&lt;/h3>
&lt;p>In Dubbo, Load Balance works after the router. It ensures that calls are evenly distributed across all machines in the address subset over a period of time.&lt;/p>
&lt;h2 id="service-governance-layer">Service Governance Layer&lt;/h2>
&lt;p>The classic Dubbo deployment architecture consists of a registry (service discovery), configuration center, and metadata center.&lt;/p>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/concepts/threecenters.png" alt="Service Governance Architecture">&lt;/p>
&lt;p>This section primarily discusses Dubbo&amp;rsquo;s service governance from an architectural and implementation perspective.&lt;/p>
&lt;h3 id="registry">Registry&lt;/h3>
&lt;p>The registry is the foundation for Dubbo&amp;rsquo;s service discovery capability, with official support for registries like Zookeeper, Nacos, Etcd, Consul, and Eureka.&lt;/p>
&lt;h3 id="config-center">Config Center&lt;/h3>
&lt;p>The configuration center is a key component for dynamically controlling Dubbo&amp;rsquo;s behavior. All rules dispatched in &lt;a href="../../../../zh-cn/overview/tasks/traffic-management">Traffic Management&lt;/a> are first saved in the configuration center.&lt;/p>
&lt;h3 id="metadata-center">Metadata Center&lt;/h3>
&lt;p>In contrast to the configuration center, from a user&amp;rsquo;s perspective, the metadata center is read-only.&lt;/p>
&lt;h2 id="custom-extension-examples">Custom Extension Examples&lt;/h2>
&lt;p>The following examples demonstrate how to extend Dubbo to address practical problems.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/extensibility/protocol/">Custom RPC Protocol&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/extensibility/router/">Custom Traffic Routing Rule&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/extensibility/registry/">Custom Registry&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/extensibility/filter/">Custom Interceptor&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="more-extension-points">More Extension Points&lt;/h2>
&lt;p>This article lists some of the commonly used extension points in Dubbo. However, there are many more extension points available for flexible customization. Each SDK for different languages may have variations in extension definitions and configuration methods.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/spi/description/">Java Extension Manual&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/preface/design/aop_and_extension/">Go Extension Manual&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/spi/description/">Java Extension Manual&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/preface/design/aop_and_extension/">Go Extension Manual&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Overview: Observability</title><link>https://cn.dubbo.apache.org/en/overview/core-features/observability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/observability/</guid><description>
&lt;p>Dubbo maintains observability metrics across multiple dimensions and supports various methods of visual monitoring. Observability metrics can be broadly categorized into three measurement dimensions:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Admin.&lt;/strong> The Admin console provides a visual representation of applications, services, instances, and dependency relationships within the cluster. It supports the issuance of traffic governance rules. Additionally, it offers tools such as service testing, mocking, and document management to enhance the efficiency of development and testing processes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Metrics.&lt;/strong> Dubbo collects a range of traffic metrics such as QPS (Queries Per Second), RT (Response Time), successful requests, failed requests, and also includes various internal component statuses like thread pool count, service health status, and more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Tracing.&lt;/strong> Dubbo has been adapted to work with mainstream industry-level distributed tracing tools, including Skywalking, Zipkin, and Jaeger. These tools all support the tracing of Dubbo services.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Logging.&lt;/strong> Dubbo supports adaptation to multiple logging frameworks. In the Java ecosystem, it provides support for various frameworks including Slf4j, Log4j2, Log4j, Logback, Jcl, etc. Users can choose the appropriate framework based on their business requirements. Additionally, Dubbo also supports Access Log to record request traces.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="admin">Admin&lt;/h2>
&lt;p>The Admin console provides a visual representation of applications, services, instances, and dependency relationships within the cluster. It supports the issuance of traffic governance rules. Additionally, it offers tools such as service testing, mocking, and document management to enhance the efficiency of development and testing processes.&lt;/p>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/feature/observability/admin.jpg" alt="Admin rendering">&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#">Admin deployment and effect demonstration&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="metrics">Metrics&lt;/h2>
&lt;p>At runtime, Dubbo collects core service metrics, including QPS (Queries Per Second), RT (Response Time), total invocations, successful invocations, and failure statistics, along with reasons for failures. Additionally, for more effective monitoring of service operation, Dubbo offers monitoring of essential component states such as thread pool count and service health status.&lt;/p>
&lt;p>You can visualize the metrics using Grafana.&lt;/p>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/feature/observability/grafana.png" alt="Grafana rendering">&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#">Use Grafana for visualizing metrics&lt;/a>&lt;/li>
&lt;li>&lt;a href="#">How to Query Specific Metrics from Prometheus&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tracing">Tracing&lt;/h2>
&lt;p>Full link tracing holds significant value in monitoring the operational status of distributed systems. Dubbo achieves runtime pointcut tracing through Filter interceptors. By exporting trace data to prominent platforms like Zipkin, Skywalking, Jaeger, etc., comprehensive end-to-end tracking data analysis and visual representation can be accomplished.&lt;/p>
&lt;p>&lt;img src="https://cn.dubbo.apache.org/imgs/v3/feature/observability/tracing.png" alt="Tracing rendering">&lt;/p>
&lt;p>With just a simple line of configuration, you can switch the backend implementation for tracing. Moreover, you have the flexibility to dynamically adjust Dubbo&amp;rsquo;s tracing sampling rate through governance platforms like Dubbo Admin, which proves highly valuable for troubleshooting.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#">Realize full-link tracking based on Skywalking&lt;/a>&lt;/li>
&lt;li>&lt;a href="#">Full link tracking based on Zipkin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="logging">Logging&lt;/h2>
&lt;p>Access logs can assist in analyzing system traffic. In certain scenarios, enabling access logs can also be very helpful for troubleshooting issues.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#">Enable Access Log&lt;/a>&lt;/li>
&lt;li>&lt;a href="#">Enable Access Log in running state&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Overview: 认证鉴权</title><link>https://cn.dubbo.apache.org/en/overview/core-features/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/security/</guid><description/></item><item><title>Overview: 服务网格</title><link>https://cn.dubbo.apache.org/en/overview/core-features/service-mesh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/service-mesh/</guid><description/></item><item><title>Overview: Microservices Ecosystem</title><link>https://cn.dubbo.apache.org/en/overview/core-features/ecosystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/ecosystem/</guid><description>
&lt;p>The Dubbo community, along with numerous outstanding open-source projects, has established a rich microservices ecosystem support around Dubbo. This allows developers to opt for Dubbo as their development framework without worrying about subsequent service governance needs. From day one, Dubbo offers production-level solutions for every common issue.&lt;/p>
&lt;p>The table below shows the support for ecosystem components based on the latest Dubbo Java 3.2.x version, which will be continuously updated based on development progress. The completeness of components supported in each language may vary. For specifics, please refer to the detailed explanations in each &lt;a href="../../mannual/">language reference manual&lt;/a>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>Component List&lt;/th>
&lt;th>Component List&lt;/th>
&lt;th>Component List&lt;/th>
&lt;th>Component List&lt;/th>
&lt;th>Component List&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Service Discovery&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/registry/zookeeper/">Zookeeper&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/registry/nacos/">Nacos&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/">Kubernetes Service&lt;/a>&lt;/td>
&lt;td>DNS​&lt;code>oaicite:{&amp;quot;number&amp;quot;:1,&amp;quot;invalid_reason&amp;quot;:&amp;quot;Malformed citation 【Under Development】&amp;quot;}&lt;/code>​&lt;/td>
&lt;td>&lt;a href="https://github.com/apache/dubbo-spi-extensions/tree/master/dubbo-registry-extensions">More&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dynamic Configuration&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config-center/zookeeper/">Zookeeper&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config-center/nacos/">Nacos&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config-center/apollo/">Apollo&lt;/a>&lt;/td>
&lt;td>Kubernetes​&lt;code>oaicite:{&amp;quot;number&amp;quot;:2,&amp;quot;invalid_reason&amp;quot;:&amp;quot;Malformed citation 【Under Development】&amp;quot;}&lt;/code>​&lt;/td>
&lt;td>&lt;a href="https://github.com/apache/dubbo-spi-extensions/tree/master/dubbo-configcenter-extensions">More&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metadata Management&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/metadata-center/zookeeper/">Zookeeper&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/metadata-center/nacos/">Nacos&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/metadata-center/redis/">Redis&lt;/a>&lt;/td>
&lt;td>Kubernetes​&lt;code>oaicite:{&amp;quot;number&amp;quot;:3,&amp;quot;invalid_reason&amp;quot;:&amp;quot;Malformed citation 【Under Development】&amp;quot;}&lt;/code>​&lt;/td>
&lt;td>&lt;a href="https://github.com/apache/dubbo-spi-extensions/tree/master/dubbo-metadata-report-extensions">More&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RPC Protocols&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/triple/">HTTP/2 (Triple)&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/reference/protocols/tcp/">TCP&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/http">HTTP/REST​&lt;code>oaicite:{&amp;quot;number&amp;quot;:4,&amp;quot;invalid_reason&amp;quot;:&amp;quot;Malformed citation 【Alpha】&amp;quot;}&lt;/code>​&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/triple">gRPC&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/">More&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Visualization &amp;amp; Monitoring Platform&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/observability/admin/">Admin&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/observability/grafana/">Grafana&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/observability/prometheus/">Prometheus&lt;/a>&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Full-link Tracing&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/observability/tracing/zipkin/">Zipkin&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/observability/tracing/skywalking/">Skywalking&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://github.com/apache/dubbo-samples/tree/master/4-governance/dubbo-samples-spring-boot3-tracing#2-adding-micrometer-tracing-bridge-to-your-project">OpenTelemetry&lt;/a>&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rate Limiting &amp;amp; Fallback&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/rate-limit/sentinel">Sentinel&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/rate-limit/resilience4j">Resilience4j&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/rate-limit/hystrix">Hystrix&lt;/a>&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Distributed Transactions&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/en/overview/tasks/ecosystem/transaction/">Seata&lt;/a>&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Gateway&lt;/td>
&lt;td>[Higress]&lt;/td>
&lt;td>&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/tasks/ecosystem/gateway/">APISIX&lt;/a>&lt;/td>
&lt;td>[Shenyu]&lt;/td>
&lt;td>&lt;a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/dubbo_proxy_filter">Envoy&lt;/a>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Service Mesh&lt;/td>
&lt;td>Istio​&lt;code>oaicite:{&amp;quot;number&amp;quot;:5,&amp;quot;invalid_reason&amp;quot;:&amp;quot;Malformed citation 【Under Development】&amp;quot;}&lt;/code>​&lt;/td>
&lt;td>&lt;a href="https://www.aeraki.net/">Aeraka&lt;/a>&lt;/td>
&lt;td>OpenSergo​&lt;code>oaicite:{&amp;quot;number&amp;quot;:6,&amp;quot;invalid_reason&amp;quot;:&amp;quot;Malformed citation 【Under Development】&amp;quot;}&lt;/code>​&lt;/td>
&lt;td>Proxyless​&lt;code>oaicite:{&amp;quot;number&amp;quot;:7,&amp;quot;invalid_reason&amp;quot;:&amp;quot;Malformed citation 【Alpha】&amp;quot;}&lt;/code>​&lt;/td>
&lt;td>More&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="microservices-ecosystem-example-architecture">Microservices Ecosystem Example Architecture&lt;/h2>
&lt;script src="https://g.alicdn.com/mamba/assets/0.0.19/mse-arc-ui.min.js">&lt;/script>
&lt;link rel="stylesheet" href="https://g.alicdn.com/mamba/assets/0.0.19/mse-arc-ui.min.css" />
&lt;section id="section-1" style="">
&lt;div class="msemap-section">
&lt;div class="msemap-container">
&lt;div id="mse-arc-container">&lt;/div>
&lt;/div>
&lt;/div>
&lt;/section></description></item><item><title>Overview: 更多高级功能</title><link>https://cn.dubbo.apache.org/en/overview/core-features/more/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/core-features/more/</guid><description/></item></channel></rss>